{"version":3,"sources":["apis/webcamsTravel.js","components/WebcamCategories.js","actions/index.js","components/WebcamsList.js","components/WebcamSingle.js","components/App.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","headers","connect","state","categories","Object","values","activeCategory","props","dispatch","useDispatch","useEffect","getState","a","webcamsTravel","get","params","show","response","type","payload","data","result","className","key","to","map","cat","id","name","count","webcams","category","match","lang","res","active","getCategoryWebcams","Fragment","filter","webcam","_","mapKeys","src","image","current","preview","alt","title","ownProps","webcamId","playerUrl","player","live","available","embed","day","width","height","align","allowFullScreen","App","path","exact","component","WebcamsList","WebcamSingle","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.227af349.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.windy.com/api/webcams/v2/\",\r\n  // baseURL: 'https://webcamstravel.p.rapidapi.com',\r\n\r\n  headers: {\r\n    // \"x-rapidapi-host\": 'webcamstravel.p.rapidapi.com',\r\n    \"x-windy-key\": \"sR2JMrK2elMFefOxSAj0GgsQMjsPOfr2\",\r\n    \"content-type\": \"application/octet-stream\"\r\n  }\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCategories } from \"../actions\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport \"./WebcamCategories.css\";\r\n\r\nconst WebcamCategories = props => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n  }, [dispatch]);\r\n  const renderList = () => {\r\n    return props.categories.map(cat => {\r\n      return (\r\n        <Link\r\n          className={\r\n            props.activeCategory === cat.id ? \"item teal active\" : \"item\"\r\n          }\r\n          key={cat.id}\r\n          to={`/category/${cat.id}`}\r\n        >\r\n          {cat.name}\r\n          <div\r\n            className={\r\n              props.activeCategory === cat.id\r\n                ? \"ui teal left pointing label\"\r\n                : \"ui label\"\r\n            }\r\n          >\r\n            {cat.count}\r\n          </div>\r\n        </Link>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"ui vertical menu categories-menu\">\r\n      <Link\r\n        className={props.activeCategory === null ? \"item teal active\" : \"item\"}\r\n        key={\"all\"}\r\n        to=\"/\"\r\n      >\r\n        All Webcams\r\n      </Link>\r\n      {renderList()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    categories: Object.values(state.categories),\r\n    activeCategory: state.activeCategory\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(WebcamCategories);\r\n","import webcamsTravel from \"../apis/webcamsTravel\";\r\n\r\nexport const getWebcams = () => async (dispatch, getState) => {\r\n  const response = await webcamsTravel.get(\r\n    \"list/country=UA/orderby=popularity,desc/limit=50\",\r\n    {\r\n      params: {\r\n        lang: \"en\",\r\n        show: \"webcams:image,location,player,category\"\r\n      }\r\n    }\r\n  );\r\n  dispatch({\r\n    type: \"GET_WEBCAMS\",\r\n    payload: {\r\n      res: response.data.result.webcams,\r\n      active: null\r\n    }\r\n  });\r\n};\r\n\r\nexport const getWebcam = id => async (dispatch, getState) => {\r\n  const response = await webcamsTravel.get(`list/webcam=${id}`, {\r\n    params: {\r\n      lang: \"en\",\r\n      show: \"webcams:image,location,player,category\"\r\n    }\r\n  });\r\n  dispatch({\r\n    type: \"GET_WEBCAM\",\r\n    payload: {\r\n      res: response.data.result.webcams[0]\r\n    }\r\n  });\r\n};\r\n\r\nexport const getCategoryWebcams = category => async (dispatch, getState) => {\r\n  const response = await webcamsTravel.get(\r\n    `list/category=${category}/country=UA/orderby=popularity,desc/limit=50`,\r\n    {\r\n      params: {\r\n        lang: \"en\",\r\n        show: \"webcams:image,location,player,category\"\r\n      }\r\n    }\r\n  );\r\n  dispatch({\r\n    type: \"GET_WEBCAMS\",\r\n    payload: {\r\n      res: response.data.result.webcams,\r\n      active: category\r\n    }\r\n  });\r\n};\r\n\r\nexport const getCategories = () => async (dispatch, getState) => {\r\n  const response = await webcamsTravel.get(\"list/country=UA\", {\r\n    params: {\r\n      show: \"categories\"\r\n    }\r\n  });\r\n  dispatch({\r\n    type: \"GET_CATEGORIES\",\r\n    payload: response.data.result.categories\r\n  });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { getWebcams, getCategoryWebcams } from \"../actions\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport WebcamCategories from \"./WebcamCategories\";\r\n\r\nconst WebcamsList = props => {\r\n  const category = props.match.params.category;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (category) {\r\n      dispatch(getCategoryWebcams(category));\r\n    } else {\r\n      dispatch(getWebcams());\r\n    }\r\n  }, [category, dispatch]);\r\n  const renderList = () => {\r\n    return props.webcams\r\n      .filter(\r\n        webcam =>\r\n          !category || (category && _.mapKeys(webcam.category, \"id\")[category])\r\n      )\r\n      .map(webcam => {\r\n        return (\r\n          <div className=\"webcam column eight wide\" key={webcam.id}>\r\n            <Link to={`/webcam/${webcam.id}`}>\r\n              <img\r\n                className=\"ui medium rounded image\"\r\n                src={webcam.image.current.preview}\r\n                alt={webcam.title}\r\n              />\r\n              <h4>{webcam.title}</h4>\r\n            </Link>\r\n          </div>\r\n        );\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <h1>Webcams all around Ukraine</h1>\r\n      <div className=\"ui grid\">\r\n        <div className=\"ten wide column\">\r\n          <div className=\"ui grid\">{renderList()}</div>\r\n        </div>\r\n        <div className=\"six wide column\">\r\n          <WebcamCategories />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { webcams: Object.values(state.webcams) };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(WebcamsList);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { getWebcam } from \"../actions\";\r\nimport WebcamCategories from \"./WebcamCategories\";\r\n\r\nconst WebcamSingle = props => {\r\n  const dispatch = useDispatch();\r\n  const webcamId = props.match.params.id;\r\n  useEffect(() => {\r\n    dispatch(getWebcam(webcamId));\r\n  }, [dispatch, webcamId]);\r\n\r\n  if (!props.webcam) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    const playerUrl = props.webcam.player.live.available\r\n      ? props.webcam.player.live.embed\r\n      : props.webcam.player.day.embed;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h1>{props.webcam.title}</h1>\r\n        <div className=\"ui grid\">\r\n          <div className=\"ten wide column\">\r\n            <iframe\r\n              src={playerUrl}\r\n              title={props.webcam.title}\r\n              width=\"700\"\r\n              height=\"450\"\r\n              align=\"left\"\r\n              allowFullScreen\r\n            >\r\n              Sorry, your browser doesn't support embedded videos.\r\n            </iframe>\r\n          </div>\r\n          <div className=\"six wide column\">\r\n            <WebcamCategories />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { webcam: state.webcams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(WebcamSingle);\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport WebcamsList from \"./WebcamsList\";\r\nimport WebcamSingle from \"./WebcamSingle\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app-wrap\">\r\n      <div className=\"ui container\">\r\n        <Router>\r\n          <Route path=\"/\" exact component={WebcamsList} />\r\n          <Route path=\"/category/:category\" exact component={WebcamsList} />\r\n          <Route path=\"/webcam/:id\" exact component={WebcamSingle} />\r\n        </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport _ from \"lodash\";\r\n\r\nconst webcamsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"GET_WEBCAMS\":\r\n      return { ...state, ..._.mapKeys(action.payload.res, \"id\") };\r\n    case \"GET_WEBCAM\":\r\n      return { ...state, [action.payload.res.id]: action.payload.res };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst webcamCategoriesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"GET_CATEGORIES\":\r\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst activeCategoryReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"GET_WEBCAMS\":\r\n      if (action.payload.active) {\r\n        return action.payload.active;\r\n      } else {\r\n        return null;\r\n      }\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  webcams: webcamsReducer,\r\n  categories: webcamCategoriesReducer,\r\n  activeCategory: activeCategoryReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}